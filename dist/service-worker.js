if (!self.define) { let e; const t = {}; const i = (i, s) => (i = new URL(`${i}.js`, s).href, t[i] || new Promise(((t) => { if ('document' in self) { const e = document.createElement('script'); e.src = i, e.onload = t, document.head.appendChild(e); } else e = i, importScripts(i), t(); })).then((() => { const e = t[i]; if (!e) throw new Error(`Module ${i} didnâ€™t register its module`); return e; }))); self.define = (s, n) => { const o = e || ('document' in self ? document.currentScript.src : '') || location.href; if (t[o]) return; const r = {}; const c = (e) => i(e, o); const d = { module: { uri: o }, exports: r, require: c }; t[o] = Promise.all(s.map(((e) => d[e] || c(e)))).then(((e) => (n(...e), r))); }; }define(['./workbox-d249b2c8'], ((e) => {
  self.addEventListener('message', ((e) => { e.data && e.data.type === 'SKIP_WAITING' && self.skipWaiting(); })), e.precacheAndRoute([{ url: 'index.html', revision: 'ffcf0ca607d718a3e254699596c63a29' }, { url: 'main.js', revision: 'fa7e4d18855b0aa99c40d3d0d023223b' }], {});
}));
